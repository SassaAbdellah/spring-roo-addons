#summary One-sentence summary of this page.
=Sample OAuth2 Applications=
*Note: Required Roo 1.2.2 or newer and Java 6 or newer*
http://spring-roo-addons.googlecode.com/files/AuthorizationCodeGrantActivityDiagram.png

==1. Prepare OAuut2  MySQL schema==
Follow the instructions at: [OAuth2SampleApplicationDBSetup]

==2. Create OAuth2 Authorization Server Roo Project (as)==
{{{
project --topLevelPackage net.tzolov --projectName as --java 6
persistence setup --database MYSQL --provider HIBERNATE 
web mvc setup 
osgi start --url http://spring-roo-addons.googlecode.com/files/net.tzolov.roo.addon.oauth2-1.0.0.jar 
oauth2 authorization-server setup
// update the database.properties (inside src\main\resources\META-INF\spring\) to point to the oauth2 database created in step 1
}}}

==3. Create Protected Resource Roo Project (res)==
{{{
project --topLevelPackage net.tzolov --projectName res --java 6
persistence setup --database MYSQL --provider HIBERNATE 
web mvc setup 
security setup
osgi start --url http://spring-roo-addons.googlecode.com/files/net.tzolov.roo.addon.oauth2-1.0.0.jar 
oauth2 resource setup --protectedResourceName MyResource 
// update the database.properties to point to the oauth2 database created in step 1
}}}


==4. Create OAuth2 Web Client Application Roo Project (webapp)==
{{{
project --topLevelPackage net.tzolov --projectName webapp --java 6
persistence setup --database HYPERSONIC_IN_MEMORY --provider HIBERNATE 
web mvc setup 
security setup
osgi start --url http://spring-roo-addons.googlecode.com/files/net.tzolov.roo.addon.oauth2-1.0.0.jar 
oauth2 web-client setup --authorizationServerUri http://localhost:8080/as --protectedResourceUri http://localhost:8181/res/myresource
}}}

==5. Build (mvn clean install) and runn all wars in a tomcat (or jetty) container==
_Note: because all application are running on the same host they have to start on different ports_
* Start the tomcat container from the authorization-server top directory: 
{{{ 
 mvn tomcat:run -Dmaven.tomcat.port=8080 
}}}

* Start the tomcat container from the webapp's top directory (use port 8686): 
{{{
 mvn tomcat:run -Dmaven.tomcat.port=8686 
}}}

* Start the tomcat container from the resource project's top directory (use port 8181): 
{{{
 mvn tomcat:run -Dmaven.tomcat.port=8181 
}}}

* Open:
http://localhost:8686/webapp/quiz