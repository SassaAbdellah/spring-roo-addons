#summary How to to use the jax-addon in Roo shell

_*Note*: Spring Roo 1.1.0.M1 can not handle *project-info.java* files in the project source folders due to [http://jira.springframework.org/browse/ROO-1022 ROO-1022]. On the other hand the project-info.java is expected output for the Jaxb to generate process. So if the generated source code is located on the project source path (e.g. src/main/java for example) you may consider trying the following workaround:_
{{{
 roo> osgi update --bundleSymbolicName org.springframework.roo.classpath 
                  --url  http://spring-roo-addons.googlecode.com/files/org.springframework.roo.classpath-1.1.0.M1-patched-tzolov.jar
}}}
_This workaround works only with the standalone Roo shell. Make sure to restart the shell after the update for the fix to be applied_

== How to use the jax-addon ==

 * Run from the Roo shell:
{{{
roo> jaxb xsd compiler setup
}}}	
 Optional parameters:
  * *generateDirectory* -  Target directory for the generated code, target/generated-sources/xjc by default 
  * *schemaDirectory*   -  Specifies the schema directory, src/main/resources by default
 * Drop your XSD files in the schema directory (src/main/resources by default) and re-build the project. All jaxb binding classes will be generated in the generate directory (by default target/generated-sources/xjc)